{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "px-vis-heatmap.html",
      "properties": [
        {
          "name": "seriesColorList",
          "type": "Array",
          "description": "Defines an colors in order that will be used for series.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[\"rgb(0,0,0)\",\"rgb(75,75,75)\",\"rgb(125,125,125)\",\"rgb(200,200,200)\"]",
          "inheritedFrom": "PxColorsBehavior.dataVisColors"
        },
        {
          "name": "xAxisType",
          "type": "string",
          "description": "Sets the type of data for the x values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `time`: for time domains.\n- `timeLocal`: for local time domains.\n- `linear`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1078,
              "column": 4
            },
            "end": {
              "line": 1081,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"linear\"",
          "inheritedFrom": "PxVisBehavior.axisTypes"
        },
        {
          "name": "yAxisType",
          "type": "string",
          "description": "Sets the type of data for the y values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `linear`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1090,
              "column": 4
            },
            "end": {
              "line": 1093,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"linear\"",
          "inheritedFrom": "PxVisBehavior.axisTypes"
        },
        {
          "name": "width",
          "type": "number",
          "description": "The width of the elem; generally the width of the charting area for most components",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "500"
        },
        {
          "name": "height",
          "type": "number",
          "description": "The height of the component; generally the height of the charting area for most components.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "500"
        },
        {
          "name": "completeSeriesConfig",
          "type": "Object",
          "description": "A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 384,
              "column": 7
            },
            "end": {
              "line": 387,
              "column": 8
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxVisBehavior.completeSeriesConfig"
        },
        {
          "name": "chartData",
          "type": "Array",
          "description": "Container for the data object that drives the chart.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "dataExtents",
          "type": "Object",
          "description": "```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1204,
              "column": 4
            },
            "end": {
              "line": 1207,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxVisBehavior.dataExtents"
        },
        {
          "name": "_defaultMargin",
          "type": "Object",
          "description": "Copy of the default margin for checking if it has changed",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxVisBehavior.margins"
        },
        {
          "name": "margin",
          "type": "Object",
          "description": "Defines the base margin for the chart. Calcs are run to add to the\nmargin to accommodate axes and other elements which exist within the SVG frame,\nbut outside the chart frame.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"top\":10,\"right\":10,\"bottom\":50,\"left\":50}"
        },
        {
          "name": "domainChanged",
          "type": "boolean",
          "description": "Boolean switching when the domain(s) has(have) changed\n\nServes as a trigger for many elements to redraw",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-d3.html",
            "start": {
              "line": 509,
              "column": 4
            },
            "end": {
              "line": 512,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null",
          "inheritedFrom": "PxVisBehaviorD3.domainUpdate"
        },
        {
          "name": "xAxisConfig",
          "type": "Object",
          "description": "Configuration object used to customize the X axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-chart.html",
            "start": {
              "line": 1185,
              "column": 4
            },
            "end": {
              "line": 1187,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxVisBehaviorChart.axisConfigs"
        },
        {
          "name": "yAxisConfig",
          "type": "Object",
          "description": "Configuration object used to customize the Y axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-chart.html",
            "start": {
              "line": 1193,
              "column": 4
            },
            "end": {
              "line": 1195,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "PxVisBehaviorChart.axisConfigs"
        },
        {
          "name": "_colorsAreSet",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "syncCSSTheme",
          "description": "Retrieves the CSS style variables set on this element and applies them\nto the appropriate properties, triggering a redraw.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_debounceSyncCSSTheme",
          "description": "Debounced function call for `syncCSSTheme` method. Loops through available\nstyle variables to apply them to appropriate objects.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_applyStyleVariables",
          "description": "Called when there is at least one style variable applied (the first is\nexpected to be named `--px-vis-series-color-0`). Loops through each\nstyle variable in the format `--px-vis-series-color-[n]` and applies\nthe resulting values and series color order to the element. Stops looping\nthrough style variables when it finds a gap.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_colorHexToRgb",
          "description": "Converts a hex-format color to RGB.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hex",
              "type": "String",
              "description": "A color in hex format"
            }
          ],
          "return": {
            "type": "String",
            "desc": "A color in RGB format"
          },
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_checkIfDevSetSeriesColorOrder",
          "description": "Compares seriesColorOrder property value to the seriesColorOrder to determine if the dev set their own override.",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 193,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "true if dev set seriesColorOrder"
          },
          "inheritedFrom": "PxColorsBehavior.dataVisColorTheming"
        },
        {
          "name": "_getColor",
          "description": "Helper function to return the correct color for a particular index.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            }
          ],
          "inheritedFrom": "PxColorsBehavior.getSeriesColors"
        },
        {
          "name": "_calcIndex",
          "description": "Helper function to calculate the index. When we run out of indcies, it loops back over valid indicies.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 223,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "i"
            },
            {
              "name": "l"
            }
          ],
          "inheritedFrom": "PxColorsBehavior.getSeriesColors"
        },
        {
          "name": "_isValidData",
          "description": "returns true if the data is valid: non NaN, null or undefined",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "PxVisBehavior.dataset"
        },
        {
          "name": "_isDataNotNull",
          "description": "returns true if the data is not null",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "inheritedFrom": "PxVisBehavior.dataset"
        },
        {
          "name": "hasUndefinedArguments",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 19,
              "column": 2
            },
            "end": {
              "line": 28,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "args"
            }
          ],
          "inheritedFrom": "PxVisBehavior.observerCheck"
        },
        {
          "name": "_applyConfigToElement",
          "description": "Applies the config object to the element. Each key in the config object\nis the name of the property to be applied",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-chart.html",
            "start": {
              "line": 873,
              "column": 4
            },
            "end": {
              "line": 891,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "config"
            },
            {
              "name": "element"
            }
          ],
          "inheritedFrom": "PxVisBehaviorChart.subConfiguration"
        },
        {
          "name": "_getDemoData",
          "description": "TODO: remove",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "xNum"
            },
            {
              "name": "yNum"
            }
          ]
        },
        {
          "name": "_updateSeriesConfig",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_colorsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 6
            },
            "end": {
              "line": 181,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 65,
          "column": 12
        },
        "end": {
          "line": 183,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "series-color-list",
          "description": "Defines an colors in order that will be used for series.",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-colors.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array",
          "inheritedFrom": "PxColorsBehavior.dataVisColors"
        },
        {
          "name": "x-axis-type",
          "description": "Sets the type of data for the x values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `time`: for time domains.\n- `timeLocal`: for local time domains.\n- `linear`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1078,
              "column": 4
            },
            "end": {
              "line": 1081,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxVisBehavior.axisTypes"
        },
        {
          "name": "y-axis-type",
          "description": "Sets the type of data for the y values\n\nValid entries are:\n- `ordinal`: for discrete input domains, such as names or categories.\n- `linear`: for continuous input domains, such as numbers.\n- `pie`: for pie/donut charts",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1090,
              "column": 4
            },
            "end": {
              "line": 1093,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "PxVisBehavior.axisTypes"
        },
        {
          "name": "width",
          "description": "The width of the elem; generally the width of the charting area for most components",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "height",
          "description": "The height of the component; generally the height of the charting area for most components.",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "complete-series-config",
          "description": "A configuration file generated by the chart behavior based on seriesConfig and defaultSeriesConfig.",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 384,
              "column": 7
            },
            "end": {
              "line": 387,
              "column": 8
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxVisBehavior.completeSeriesConfig"
        },
        {
          "name": "chart-data",
          "description": "Container for the data object that drives the chart.",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "data-extents",
          "description": "```\n {\n     \"x\": [0,100],\n     \"y\": [5,50],\n }\n```\n\nFor an ordinal dataset, chart extents can be set like this:\n```\n {\n     \"x\": ['low','medium','high'],\n     \"y\": [5,50],\n }\n```",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-common.html",
            "start": {
              "line": 1204,
              "column": 4
            },
            "end": {
              "line": 1207,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxVisBehavior.dataExtents"
        },
        {
          "name": "margin",
          "description": "Defines the base margin for the chart. Calcs are run to add to the\nmargin to accommodate axes and other elements which exist within the SVG frame,\nbut outside the chart frame.",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "domain-changed",
          "description": "Boolean switching when the domain(s) has(have) changed\n\nServes as a trigger for many elements to redraw",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-d3.html",
            "start": {
              "line": 509,
              "column": 4
            },
            "end": {
              "line": 512,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "PxVisBehaviorD3.domainUpdate"
        },
        {
          "name": "x-axis-config",
          "description": "Configuration object used to customize the X axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-chart.html",
            "start": {
              "line": 1185,
              "column": 4
            },
            "end": {
              "line": 1187,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxVisBehaviorChart.axisConfigs"
        },
        {
          "name": "y-axis-config",
          "description": "Configuration object used to customize the Y axis cosmetic properties.\nPlease refer to px-vis-axis (https://github.com/PredixDev/px-vis) for a list of supported properties",
          "sourceRange": {
            "file": "bower_components/px-vis/px-vis-behavior-chart.html",
            "start": {
              "line": 1193,
              "column": 4
            },
            "end": {
              "line": 1195,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "PxVisBehaviorChart.axisConfigs"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "width-changed",
          "description": "Fired when the `width` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "height-changed",
          "description": "Fired when the `height` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "complete-series-config-changed",
          "description": "Fired when the `completeSeriesConfig` property changes.",
          "metadata": {},
          "inheritedFrom": "PxVisBehavior.completeSeriesConfig"
        },
        {
          "type": "CustomEvent",
          "name": "data-extents-changed",
          "description": "Fired when the `dataExtents` property changes.",
          "metadata": {},
          "inheritedFrom": "PxVisBehavior.dataExtents"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-vis-heatmap"
    }
  ]
}
